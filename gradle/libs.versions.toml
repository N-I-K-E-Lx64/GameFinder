[versions]
agp = "8.2.2"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.8.2"
compose-plugin = "1.6.0-rc03"
junit = "4.13.2"
kotlin = "1.9.21"
coroutines = "1.7.3"
datetime = "0.5.0"
ktor = "2.3.7"
kotlinx-serialization-plugin = "1.9.21"
kotlinx-serialization = "1.6.2"
koin-core = "3.5.3"
koin-compose = "1.1.2"
voyager = "1.0.0"
buildKonfig = "0.15.1"
sqlDelight = "2.0.1"
multiplatformSettings = "1.1.1"

logback = "1.4.14"
napier = "2.7.1"
kamel = "0.9.1"

jewel = "0.14.1"
compose-shimmer = "1.2.0"
reorderable = "1.3.2"

material3WindowSizeClassMultiplatform = "0.3.2"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose-plugin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-desktop = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin-core" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin-core" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose"}
multiplatform-noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
multiplatform-Coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }

sqlDelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqlDelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight"}
sqlDelight-primitives = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqlDelight" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kamel = { module = "media.kamel:kamel-image", version.ref = "kamel" }

voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }

material3-window-size-multiplatform = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "material3WindowSizeClassMultiplatform" }

jewel-int-ui-decoratedWindow = { module = "org.jetbrains.jewel:jewel-int-ui-decorated-window", version.ref = "jewel" }
compose-shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "compose-shimmer" }
reorderable = { module = "sh.calvin.reorderable:reorderable", version.ref = "reorderable" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization" , version.ref = "kotlinx-serialization-plugin" }
sqlDelight-plugin = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }

buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }