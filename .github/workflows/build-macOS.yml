# This is a basic workflow to help you get started with Actions
name: Build Multiplatform Project Release (MacOS)

# Controls when the workflow will run
on:
  # Triggers the workflow on a call from the parent workflow
  workflow_call:

jobs:
  build-macOs-release:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Install JBR for MacOS (x64 and aarch64)
      - name: Install and Setup JetBrains Runtime (macOS)
        if: runner.os == 'macOS'
        shell: bash
        env:
          JBR_URL_macOS_X64: 'https://cache-redirector.jetbrains.com/intellij-jbr/jbrsdk-17.0.10-osx-x64-b1000.48.tar.gz'
          JBR_URL_macOS_ARM64: 'https://cache-redirector.jetbrains.com/intellij-jbr/jbrsdk-17.0.10-osx-aarch64-b1000.48.tar.gz'
        run: |
          mkdir -p "$HOME/.jdks/jbr17"
          wget -q -O - "$JBR_URL_${{ runner.os }}_${{ runner.arch }}" | tar -xzf - --strip-components=1 -C "$HOME/.jdks/jbr17"
          echo "JAVA_HOME=$HOME/.jdks/jbr17/Contents/Home" >> $GITHUB_ENV
          echo "PATH=$HOME/.jdks/jbr17/Contents/Home/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Java Setup
        shell: bash
        run: |
          java --version
          which java

      - name: Build Multiplatform project-desktop
        # Loads the necessary environment variables from the secret store
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        shell: bash
        run: ./gradlew packageReleaseDmg

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          # Artifact name
          name: gamefinder-macos
          # A file, directory or wildcard pattern that describes what to upload
          path: composeApp/build/compose/binaries/main-release/dmg/de.hive.gamefinder-1.0.0.dmg
          # The desired behavior if no files are found using the provided path. Available Options:
          # warn: Output a warning but do not fail the action
          # error: Fail the action with an error message
          # ignore: Do not output any warnings or errors, the action does not fail
          if-no-files-found: error

          # Duration after which artifact will expire in days. 0 means using default retention
          retention-days: 0
          # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.
          overwrite: true
