name: Build and Release Multiplatform Project

on:
  push:
    branches: ['release/**']
    tags:
      - "v*.*.*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-release:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Install JBR for Windows
      - name: Install and Setup JetBrains Runtime (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        env:
          JBR_URL_Windows_X64: 'https://cache-redirector.jetbrains.com/intellij-jbr/jbrsdk-17.0.10-windows-x64-b1000.48.tar.gz'
        # Invoke-WebRequest -Uri "$env:JBR_URL_Windows_X64" -OutFile "jbr.tar.gz"
        run: |
          mkdir -p "$HOME/.jdks/jbr17"
          Start-BitsTransfer -Source "$env:JBR_URL_Windows_X64" -Destination "jbr.tar.gz"
          tar -xzf "jbr.tar.gz" --strip-components=1 -C "$HOME/.jdks/jbr17"
          Remove-Item "jbr.tar.gz"

      - name: Setup JAVA_HOME and PATH (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          echo "JAVA_HOME=$HOME\.jdks\jbr17" >> $env:GITHUB_ENV
          echo "PATH=$HOME\.jdks\jbr17\bin;$env:PATH" >> $env:GITHUB_ENV

      - name: Verify Java Setup
        shell: bash
        run: |
          java --version
          which java

#      - uses: gradle/actions/setup-gradle@v3
#        with:
#          # Only write to the cache for builds on the 'main' and 'release' branches. (Default is 'main' only.)
#          # Builds on other branches will only read existing entries from the cache.
#          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/release' }}

      - name: Build multiplatform project (desktop)
        # Loads the necessary environment variables from the secret store
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        shell: bash
        run: ./gradlew createDistributable

      - name: Run conveyor
        uses: hydraulic-software/conveyor/actions/build@v13.1
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          CONVEYOR_TOKEN: ${{ secrets.CONVEYOR_TOKEN }}
        with:
          command: make copied-site
          signing_key: ${{ secrets.SIGNING_KEY }}
          agree_to_license: 1
