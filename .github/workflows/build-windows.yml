# This is a basic workflow to help you get started with Actions
name: Build Multiplatform Project Release (Windows)

# Controls when the workflow will run
on:
  # Triggers the workflow on a call from the parent workflow
  workflow_call:

jobs:
  build-windows-release:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Install JBR for Windows
      - name: Install and Setup JetBrains Runtime (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        env:
          JBR_URL_Windows_X64: 'https://cache-redirector.jetbrains.com/intellij-jbr/jbrsdk-17.0.10-windows-x64-b1000.48.tar.gz'
        # Invoke-WebRequest -Uri "$env:JBR_URL_Windows_X64" -OutFile "jbr.tar.gz"
        run: |
          mkdir -p "$HOME/.jdks/jbr17"
          Start-BitsTransfer -Source "$env:JBR_URL_Windows_X64" -Destination "jbr.tar.gz"
          tar -xzf "jbr.tar.gz" --strip-components=1 -C "$HOME/.jdks/jbr17"
          Remove-Item "jbr.tar.gz"

      - name: Setup JAVA_HOME and PATH (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          echo "JAVA_HOME=$HOME\.jdks\jbr17" >> $env:GITHUB_ENV
          echo "PATH=$HOME\.jdks\jbr17\bin;$env:PATH" >> $env:GITHUB_ENV

      - name: Verify Java Setup
        shell: bash
        run: |
          java --version
          which java

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build Multiplatform project-desktop
        # Loads the necessary environment variables from the secret store
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run: ./gradlew packageUberJarForCurrentOS

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          # Artifact name
          name: gamefinder-windows
          # A file, directory or wildcard pattern that describes what to upload
          # path: composeApp\build\compose\binaries\main-release\msi\de.hive.gamefinder-0.1.0.msi
          path: composeApp\build\compose\jars\gamefinder-windows-x64-1.0.0.jar
          # The desired behavior if no files are found using the provided path. Available Options:
          # warn: Output a warning but do not fail the action
          # error: Fail the action with an error message
          # ignore: Do not output any warnings or errors, the action does not fail
          if-no-files-found: error

          # Duration after which artifact will expire in days. 0 means using default retention
          retention-days: 0
          # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.
          overwrite: true
